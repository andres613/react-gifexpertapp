{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputvalue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,4CAEII,MAAOF,GAFX,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAI,cACrB,4BAAKN,QCDJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAAEpB,IAEEqB,EDhB0BM,CAAc3B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,2CAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEZzBiB,EAAe,WAAM,MAGQ1C,mBAAS,CAAE,cAHnB,mBAGtB2C,EAHsB,KAGV5C,EAHU,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCrBlC8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.459fcf83.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputvalue] = useState(\"\");\n\n    const handleInputChange = (e) => {\n        setInputvalue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); //evita hacer refresh del navegador\n\n        if( inputValue.trim().length > 2 ) {\n            setCategories(cate => [ inputValue, ...cate,]);\n            setInputvalue(\"\");\n        }\n        //aunque no se est√© pasando como argumento el arreglo, el callback que tiene setCategories\n        //posee el estado anterior\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=dc6zaTOxFJmzC`;\n    const response = await fetch( url );\n    const { data } = await response.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url //el ? pregunta si vienen las imagenes y las muestra\n        }\n    })\n    return gifs;\n}\n","export const GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__fadeIn\">\n            <img src={ url } alt=\"{ title }\" />\n            <p>{ title }</p>\n        </div>\n    );\n}\n","import { useFetchGifs } from \"../hooks/useFetchGifs.js\"\nimport { GifGridItem } from \"./GifGridItem.js\"\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n    \n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n\n        </>\n    );\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifs.js'\n\nexport const useFetchGifs = ( category ) => { \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setTimeout(() => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n                }, 3000);\n            })\n    }, [ category ]);\n\n    return state;\n}\n","import { useState } from \"react\";\n\nimport { AddCategory } from './components/AddCategory.js';\nimport { GifGrid } from './components/GifGrid.js';\n\nexport const GifExpertApp = () => {\n\n    // const category = [ \"One Punch\", \"Samurai X\", \"Dragon Ball\" ];\n    const [ categories, setCategories ] = useState([ \"One Punch\" ]);\n\n    // const handleAdd = () => {\n    // \t\t// setCategories( [...categories, \"Hunter\"] );\n    // \t\tsetCategories( cate => [...cate, \"Hunter\"] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n            {/* <button onClick={ handleAdd }>Add</button> */}\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp.js'\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}